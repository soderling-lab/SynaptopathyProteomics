as.matrix              package:data.table              R Documentation

_C_o_n_v_e_r_t _a _d_a_t_a._t_a_b_l_e _t_o _a _m_a_t_r_i_x

_D_e_s_c_r_i_p_t_i_o_n:

     Converts a ‘data.table’ into a ‘matrix’, optionally using one of
     the columns in the ‘data.table’ as the ‘matrix’ ‘rownames’.

_U_s_a_g_e:

     ## S3 method for class 'data.table'
     as.matrix(x, rownames=NULL, rownames.value=NULL, ...)
     
_A_r_g_u_m_e_n_t_s:

       x: a ‘data.table’

rownames: optional, a single column name or column number to use as the
          ‘rownames’ in the returned ‘matrix’. If ‘TRUE’ the ‘key’ of
          the ‘data.table’ will be used if it is a single column,
          otherwise the first column in the ‘data.table’ will be used.

rownames.value: optional, a vector of values to be used as the
          ‘rownames’ in the returned ‘matrix’. It must be the same
          length as ‘nrow(x)’.

     ...: Required to be present because the generic `as.matrix`
          generic has it. Arguments here are not currently used or
          passed on by this method.

_D_e_t_a_i_l_s:

     ‘as.matrix’ is a generic function in base R. It dispatches to
     ‘as.matrix.data.table’ if its ‘x’ argument is a ‘data.table’.

     The method for ‘data.table’s will return a character matrix if
     there are only atomic columns and any
     non-(numeric/logical/complex) column, applying ‘as.vector’ to
     factors and ‘format’ to other non-character columns. Otherwise,
     the usual coercion hierarchy (logical < integer < double <
     complex) will be used, e.g., all-logical data frames will be
     coerced to a logical matrix, mixed logical-integer will give an
     integer matrix, etc.

_V_a_l_u_e:

     A new ‘matrix’ containing the contents of ‘x’.

_S_e_e _A_l_s_o:

     ‘data.table’, ‘as.matrix’, ‘data.matrix’ ‘array’

_E_x_a_m_p_l_e_s:

     DT <- data.table(A = letters[1:10], X = 1:10, Y = 11:20)
     as.matrix(DT) # character matrix
     as.matrix(DT, rownames = "A")
     as.matrix(DT, rownames = 1)
     as.matrix(DT, rownames = TRUE)
     
     setkey(DT, A)
     as.matrix(DT, rownames = TRUE)
     

